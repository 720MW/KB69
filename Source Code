// basic code to get the keyboard running. You can easily modify the macros, add F row, add lights if you have them, etc. uploaded using Arduino IDE to Teensy 4.0

#include <Keyboard.h>
#define LED 23
int capsCount = 0;
const byte numRows = 4;
const byte numCols = 18;
char keys[numRows][numCols] = {
  {'\t','q','w','e','r','t','y','u','i','o','p','\'','B','D','7','8','9'},
  {'C','a','s','d','f','g','h','j','k','l',';','E','Z','A','4','5','6'},
  {'S','z','x','c','v','b','n','m',',','.','/','G','U','D','D','1','2','3'},
  {'U','<','>','-','=',' ',' ','[',']','\\','L','D','R','J','K','0','E'}
};
byte rowPins[numRows] = {0, 1, 2, 3};
byte colPins[numCols] = {4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22};
bool keyState[numRows][numCols] = {false};
bool lastKeyState[numRows][numCols] = {false};

///////////////////////////////////////////////////////

void setup() {
  Serial.begin(9600);
  Keyboard.begin();
  pinMode(LED, OUTPUT);
  digitalWrite(LED, LOW);
  for (byte row = 0; row < numRows; row++) {
    pinMode(rowPins[row], OUTPUT);
    digitalWrite(rowPins[row], HIGH); // Set rows to HIGH initially
  }
  for (byte col = 0; col < numCols; col++) {
    pinMode(colPins[col], INPUT_PULLUP);
  }
}

///////////////////////////////////////////////////////

void loop() {
  for (byte col = 0; col < numCols; col++) {
    pinMode(colPins[col], INPUT_PULLUP);
    for (byte row = 0; row < numRows; row++) {
      digitalWrite(rowPins[row], LOW);
      delayMicroseconds(10); 
      keyState[row][col] = digitalRead(colPins[col]) == LOW;
      digitalWrite(rowPins[row], HIGH); 
    }
    pinMode(colPins[col], INPUT); 
  }
  for (byte row = 0; row < numRows; row++) {
    for (byte col = 0; col < numCols; col++) {
      if (keyState[row][col] != lastKeyState[row][col]) {
        if (keyState[row][col]) {
          char key = keys[row][col];
          Serial.print("Key pressed: ");
          Serial.println(key);
          if (row == 0 && col == 0) {
            Keyboard.press(KEY_TAB);
          } else if (row == 0 && col == 12) {
            Keyboard.press(KEY_BACKSPACE);
          } else if (row == 0 && col == 13) {
            Keyboard.press(KEY_DELETE);
          } else if (row == 1 && col == 0) {
            Keyboard.press(KEY_CAPS_LOCK);
            capsCount++;
            if (capsCount == 1) {
              digitalWrite(LED, HIGH);
            } else if (capsCount > 1) {
              digitalWrite(LED, LOW);
              capsCount = 0;
            }
          } else if (row == 1 && col == 11) {
            Keyboard.press(KEY_RETURN);
          } else if (row == 1 && col == 12) {
            Keyboard.press(KEY_MEDIA_VOLUME_INC);
          } else if (row == 1 && col == 13) {
            //do something here
          } else if (row == 2 && col == 0) {
            Keyboard.press(KEY_LEFT_SHIFT);
          } else if (row == 2 && col == 11) {
            Keyboard.press(96);
          } else if (row == 2 && col == 12) {
            Keyboard.press(KEY_UP_ARROW);
          } else if (row == 2 && col == 13) {
            Keyboard.press(KEY_MEDIA_VOLUME_DEC);
          } else if (row == 2 && col == 14) {
            Keyboard.press(KEY_F8);
          } else if (row == 3 && col == 0) {
            Keyboard.press(KEY_LEFT_GUI);
          } else if (row == 3 && col == 1) {
            Keyboard.press(KEY_LEFT_CTRL);
          } else if (row == 3 && col == 2) {
            Keyboard.press(KEY_LEFT_ALT);
          } else if (row == 3 && col == 10) {
            Keyboard.press(KEY_LEFT_ARROW);
          } else if (row == 3 && col == 11) {
            Keyboard.press(KEY_DOWN_ARROW);
          } else if (row == 3 && col == 12) {
            Keyboard.press(KEY_RIGHT_ARROW);
          } else if (row == 3 && col == 13) {
            Keyboard.press(KEY_MEDIA_PLAY_PAUSE);
          } else if (row == 3 && col == 14) {
            // aint shit yet
          } else if (row == 3 && col == 16) {
            Keyboard.press(KEY_ESC);
          } else {
            Keyboard.press(key);
          }
        } else {
          char key = keys[row][col];
          if (row == 0 && col == 0) {
            Keyboard.release(KEY_TAB);
          } else if (row == 0 && col == 12) {
            Keyboard.release(KEY_BACKSPACE);
          } else if (row == 0 && col == 13) {
            Keyboard.release(KEY_DELETE);
          } else if (row == 1 && col == 0) {
            Keyboard.release(KEY_CAPS_LOCK);
          } else if (row == 1 && col == 11) {
            Keyboard.release(KEY_RETURN);
          } else if (row == 1 && col == 12) {
            Keyboard.release(KEY_MEDIA_VOLUME_INC);
          } else if (row == 1 && col == 13) {
            //macro 1 (unused currently)
          } else if (row == 2 && col == 0) {
            Keyboard.release(KEY_LEFT_SHIFT);
          } else if (row == 2 && col == 11) {
            Keyboard.release(96);
          } else if (row == 2 && col == 12) {
            Keyboard.release(KEY_UP_ARROW);
          } else if (row == 2 && col == 13) {
            Keyboard.release(KEY_MEDIA_VOLUME_DEC);
          } else if (row == 2 && col == 14) {
            Keyboard.release(KEY_F8);
          } else if (row == 3 && col == 0) {
            Keyboard.release(KEY_LEFT_GUI);
          } else if (row == 3 && col == 1) {
            Keyboard.release(KEY_LEFT_CTRL);
          } else if (row == 3 && col == 2) {
            Keyboard.release(KEY_LEFT_ALT);
          } else if (row == 3 && col == 10) {
            Keyboard.release(KEY_LEFT_ARROW);
          } else if (row == 3 && col == 11) {
            Keyboard.release(KEY_DOWN_ARROW);
          } else if (row == 3 && col == 12) {
            Keyboard.release(KEY_RIGHT_ARROW);
          } else if (row == 3 && col == 13) {
            Keyboard.release(KEY_MEDIA_PLAY_PAUSE);
          } else if (row == 3 && col == 14) {
            //nothin to see here m8
          } else if (row == 3 && col == 16) {
            Keyboard.release(KEY_ESC);
          } else {
            Keyboard.release(key);
          }
        }
        lastKeyState[row][col] = keyState[row][col];  
      }
    }
  }
}
